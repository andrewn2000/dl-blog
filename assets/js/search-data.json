{
  
    
        "post0": {
            "title": "Spread The Love And Become A Blogger",
            "content": "# Spread the love and become a blogger! . . After I got wind of fastpages and attempting to configure it, I think you’ll see a lot more posts in this fashion. At least it’s a historical way for me to look back and see how far I really came! . Not everything I want to write is in [code] in a jupyter notebook, however it is cool, which I have yet to figure that one out, so bare with me. But to set this up, it’s a pain in the rear and you keep hearing from everyone to set up a redirect. (actually in my olden web days its called a redirect and its super simple) . Why does everyone make it seem so complicated is beyond me? https://github.com/fastai/fastpages/issues/169 . Really? I have to learn what the heck is Jekyll? Ok, I give, but the answer was super simple but the setup was a bit more complicated than what I thought. So let me give you a bit of history so you don’t have to make the same mistake. . When you first sign up for GitHub, you can get a free GitHub page, although you only get one. This is usually set up as https://&lt;username&gt;.github.io. Unfortunately, if you want to use fastpages, it doesn’t support this user page. This means you have to make a repo project and it will tag the end of your page with your custom repo name, so if I created a repo that said blog, it would end up being https://&lt;username&gt;.github.io/blog . Now enter my mistake of NOT using fastpages to begin with. If you have seen fast.ai big push on to get blogging then you’ve missed some posts that will be vital to others coming behind you. See Rachel’s post here. So if you followed those directions you made posts with the single page. Mine was like this . . Here you can see that the site was forked from fastai/fast_template. This allowed me to get going although not pretty, but I couldn’t do some cool things that fastpages give you. Mainly convert your notebooks into blog posts. . So I forked ANOTHER repo from fastai/fastpages . . After I played with that, I found the docx conversion and hence my main reason for cutting over to fastpages. If you follow the original blog post from Rachel, you’ll notice you can’t quite just write your prose in word and then upload. You have to convert it and make it do all kinds of nasty things, rather than simply uploading it and it magically be set up. This is what fastpages does for me. . Now the problem I had was my custom domain which was pointing to my first site created by the fast_template. I tried to move this by pointing to the fastpages site, but things got all wacky. . Then after spending hours of research I kept hearing everyone talk about a redirect. I kept reading the recommended source https://dev.to/steveblue/setup-a-redirect-on-github-pages-1ok7, but couldn’t figure it out until it dawned on me. Duh . I just had to CREATE an index.HTML note freakin extension, cuz I swear I was reading this and it didn’t dawn on me. For a few hours, I kept changed the index.md file and not creating the index.html file. . This is a special file, like default.htm which websites will run if there are no other special configurations. I placed this code: . &lt;!DOCTYPE html&gt; . &lt;meta charset=”utf-8”&gt; . &lt;title&gt;Redirecting to https://andynakamura.com/dl-blog&lt;/title&gt; . &lt;meta http-equiv=”refresh” content=”0; URL=https://andynakamura.com/dl-blog”&gt; . &lt;link rel=”canonical” href=”https://andynakamura.com/dl-blog”&gt; . And then hit my main page of https://andynakamura.com and VOILA it redirected to the fastpages site. I merged all the files from the fast_template site to the fastpages site so it looks a little wonky, but I don’t care. Its satisfying enough that I spent freaking all day just to get this, but it’s a blessing, because I can write in WORD much faster with all the spell check and formatting to my liking and then when I’m done, I can use VSCode or GitHub Desktop to push my changes and my images up and I’m cool! . However, there is a caveat to all this “free” blogging platform. . The limits of 1GB in size for a repo seem generous, but if you keep adding in photos, well then its perhaps better to cut to push to a real blogging platform, aka wordpress and all this mess. But when I reach that point, I can always archive off a few posts and move them. . # Study Group afterthoughts . I had my first study group meeting last night, thanks to the people at TWIML for having me host it. I did have fun and it was interesting when things started to go over my head. Thanks to those that really got into the discussions! . The notes are on the slack channel and there will be a recording that I’ll have put up later today. Its just that I’m beat over this fast_template to fastpages thing, and its such a simple solution…sigh. . There were some bonus piece that I wanted to give to the group that was not on the video. I think I’ll just put them here. . # Bonus Stuff . previous questionnaire solutions (although some are not correct) . https://forums.fast.ai/t/fastbook-questionnaire-solutions-megathread/76955 . Paperspace tips . Get free account as you get more options and easier to get the Free-P5000 . DataLoader worker (pid 109) is killed by signal: Killed. This usually means you don’t have enough memory. Sure enough they only gave me a CPU, rather a GPU . from fastai.text.all import * . dls = TextDataLoaders.from_folder(untar_data(URLs.IMDB), valid=’test’) . learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy) . learn.fine_tune(4, 1e-2) . error . https://forums.fast.ai/t/platform-paperspace-free-paid-options/65515/125 https://andynakamura.com/2020/08/31/Chapter1-thoughts.html . ** Discord channel: fast.ai ** I can send you an invite, just let me know. search from: andrewn#5250 . Articles . Learning Deep Learning — fast.ai vs. deeplearning.ai https://medium.com/zero-equals-false/learning-deep-learning-fast-ai-vs-deeplearning-ai-34f9c42cf701 . How not to do Fast.ai (or any ML MOOC) https://medium.com/@init_27/how-not-to-do-fast-ai-or-any-ml-mooc-3d34a7e0ab8c . What You Need to Know Before Considering a PhD https://www.fast.ai/2018/08/27/grad-school . Alternatives to a Degree to Prove Yourself in Deep Learning https://www.fast.ai/2017/04/06/alternatives . Google Colab: Is it Worth the Money? https://towardsdatascience.com/colab-pro-is-it-worth-the-money-32a1744f42a8 .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/09/09/Spread-the-love-and-become-a-blogger.html",
            "relUrl": "/2020/09/09/Spread-the-love-and-become-a-blogger.html",
            "date": " • Sep 9, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Your Deep Learning Journey",
            "content": "Deep Learning Is for Everyone . Neural Networks: A Brief History . Who We Are . How to Learn Deep Learning . Your Projects and Your Mindset . The Software: PyTorch, fastai, and Jupyter . Your First Model . Getting a GPU Deep Learning Server . Running Your First Notebook . # CLICK ME from fastai.vision.all import * path = untar_data(URLs.PETS)/&#39;images&#39; def is_cat(x): return x[0].isupper() dls = ImageDataLoaders.from_name_func( path, get_image_files(path), valid_pct=0.2, seed=42, label_func=is_cat, item_tfms=Resize(224)) learn = cnn_learner(dls, resnet34, metrics=error_rate) learn.fine_tune(1) . Sidebar: This Book Was Written in Jupyter Notebooks . 1+1 . img = PILImage.create(image_cat()) img.to_thumb(192) . End sidebar . uploader = widgets.FileUpload() uploader . img = PILImage.create(uploader.data[0]) is_cat,_,probs = learn.predict(img) print(f&quot;Is this a cat?: {is_cat}.&quot;) print(f&quot;Probability it&#39;s a cat: {probs[1].item():.6f}&quot;) . What Is Machine Learning? . gv(&#39;&#39;&#39;program[shape=box3d width=1 height=0.7] inputs-&gt;program-&gt;results&#39;&#39;&#39;) . gv(&#39;&#39;&#39;model[shape=box3d width=1 height=0.7] inputs-&gt;model-&gt;results; weights-&gt;model&#39;&#39;&#39;) . gv(&#39;&#39;&#39;ordering=in model[shape=box3d width=1 height=0.7] inputs-&gt;model-&gt;results; weights-&gt;model; results-&gt;performance performance-&gt;weights[constraint=false label=update]&#39;&#39;&#39;) . gv(&#39;&#39;&#39;model[shape=box3d width=1 height=0.7] inputs-&gt;model-&gt;results&#39;&#39;&#39;) . What Is a Neural Network? . A Bit of Deep Learning Jargon . gv(&#39;&#39;&#39;ordering=in model[shape=box3d width=1 height=0.7 label=architecture] inputs-&gt;model-&gt;predictions; parameters-&gt;model; labels-&gt;loss; predictions-&gt;loss loss-&gt;parameters[constraint=false label=update]&#39;&#39;&#39;) . Limitations Inherent To Machine Learning . From this picture we can now see some fundamental things about training a deep learning model: . A model cannot be created without data. | A model can only learn to operate on the patterns seen in the input data used to train it. | This learning approach only creates predictions, not recommended actions. | It&#39;s not enough to just have examples of input data; we need labels for that data too (e.g., pictures of dogs and cats aren&#39;t enough to train a model; we need a label for each one, saying which ones are dogs, and which are cats). | . Generally speaking, we&#39;ve seen that most organizations that say they don&#39;t have enough data, actually mean they don&#39;t have enough labeled data. If any organization is interested in doing something in practice with a model, then presumably they have some inputs they plan to run their model against. And presumably they&#39;ve been doing that some other way for a while (e.g., manually, or with some heuristic program), so they have data from those processes! For instance, a radiology practice will almost certainly have an archive of medical scans (since they need to be able to check how their patients are progressing over time), but those scans may not have structured labels containing a list of diagnoses or interventions (since radiologists generally create free-text natural language reports, not structured data). We&#39;ll be discussing labeling approaches a lot in this book, because it&#39;s such an important issue in practice. . Since these kinds of machine learning models can only make predictions (i.e., attempt to replicate labels), this can result in a significant gap between organizational goals and model capabilities. For instance, in this book you&#39;ll learn how to create a recommendation system that can predict what products a user might purchase. This is often used in e-commerce, such as to customize products shown on a home page by showing the highest-ranked items. But such a model is generally created by looking at a user and their buying history (inputs) and what they went on to buy or look at (labels), which means that the model is likely to tell you about products the user already has or already knows about, rather than new products that they are most likely to be interested in hearing about. That&#39;s very different to what, say, an expert at your local bookseller might do, where they ask questions to figure out your taste, and then tell you about authors or series that you&#39;ve never heard of before. . How Our Image Recognizer Works . What Our Image Recognizer Learned . Image Recognizers Can Tackle Non-Image Tasks . Jargon Recap . Deep Learning Is Not Just for Image Classification . path = untar_data(URLs.CAMVID_TINY) dls = SegmentationDataLoaders.from_label_func( path, bs=8, fnames = get_image_files(path/&quot;images&quot;), label_func = lambda o: path/&#39;labels&#39;/f&#39;{o.stem}_P{o.suffix}&#39;, codes = np.loadtxt(path/&#39;codes.txt&#39;, dtype=str) ) learn = unet_learner(dls, resnet34) learn.fine_tune(8) . learn.show_results(max_n=6, figsize=(7,8)) . from fastai.text.all import * dls = TextDataLoaders.from_folder(untar_data(URLs.IMDB), valid=&#39;test&#39;) learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy) learn.fine_tune(4, 1e-2) . If you hit a &quot;CUDA out of memory error&quot; after running this cell, click on the menu Kernel, then restart. Instead of executing the cell above, copy and paste the following code in it: . from fastai.text.all import * dls = TextDataLoaders.from_folder(untar_data(URLs.IMDB), valid=&#39;test&#39;, bs=32) learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy) learn.fine_tune(4, 1e-2) . This reduces the batch size to 32 (we will explain this later). If you keep hitting the same error, change 32 to 16. . learn.predict(&quot;I really liked that movie!&quot;) . Sidebar: The Order Matters . End sidebar . from fastai.tabular.all import * path = untar_data(URLs.ADULT_SAMPLE) dls = TabularDataLoaders.from_csv(path/&#39;adult.csv&#39;, path=path, y_names=&quot;salary&quot;, cat_names = [&#39;workclass&#39;, &#39;education&#39;, &#39;marital-status&#39;, &#39;occupation&#39;, &#39;relationship&#39;, &#39;race&#39;], cont_names = [&#39;age&#39;, &#39;fnlwgt&#39;, &#39;education-num&#39;], procs = [Categorify, FillMissing, Normalize]) learn = tabular_learner(dls, metrics=accuracy) . learn.fit_one_cycle(3) . from fastai.collab import * path = untar_data(URLs.ML_SAMPLE) dls = CollabDataLoaders.from_csv(path/&#39;ratings.csv&#39;) learn = collab_learner(dls, y_range=(0.5,5.5)) learn.fine_tune(10) . learn.show_results() . Sidebar: Datasets: Food for Models . End sidebar . Validation Sets and Test Sets . Use Judgment in Defining Test Sets . A Choose Your Own Adventure moment . Questionnaire . It can be hard to know in pages and pages of prose what the key things are that you really need to focus on and remember. So, we&#39;ve prepared a list of questions and suggested steps to complete at the end of each chapter. All the answers are in the text of the chapter, so if you&#39;re not sure about anything here, reread that part of the text and make sure you understand it. Answers to all these questions are also available on the book&#39;s website. You can also visit the forums if you get stuck to get help from other folks studying this material. . Do you need these for deep learning? . Lots of math T / F | Lots of data T / F | Lots of expensive computers T / F | A PhD T / F | . | Name five areas where deep learning is now the best in the world. . | What was the name of the first device that was based on the principle of the artificial neuron? | Based on the book of the same name, what are the requirements for parallel distributed processing (PDP)? | What were the two theoretical misunderstandings that held back the field of neural networks? | What is a GPU? | Open a notebook and execute a cell containing: 1+1. What happens? | Follow through each cell of the stripped version of the notebook for this chapter. Before executing each cell, guess what will happen. | Complete the Jupyter Notebook online appendix. | Why is it hard to use a traditional computer program to recognize images in a photo? | What did Samuel mean by &quot;weight assignment&quot;? | What term do we normally use in deep learning for what Samuel called &quot;weights&quot;? | Draw a picture that summarizes Samuel&#39;s view of a machine learning model. | Why is it hard to understand why a deep learning model makes a particular prediction? | What is the name of the theorem that shows that a neural network can solve any mathematical problem to any level of accuracy? | What do you need in order to train a model? | How could a feedback loop impact the rollout of a predictive policing model? | Do we always have to use 224×224-pixel images with the cat recognition model? | What is the difference between classification and regression? | What is a validation set? What is a test set? Why do we need them? | What will fastai do if you don&#39;t provide a validation set? | Can we always use a random sample for a validation set? Why or why not? | What is overfitting? Provide an example. | What is a metric? How does it differ from &quot;loss&quot;? | How can pretrained models help? | What is the &quot;head&quot; of a model? | What kinds of features do the early layers of a CNN find? How about the later layers? | Are image models only useful for photos? | What is an &quot;architecture&quot;? | What is segmentation? | What is y_range used for? When do we need it? | What are &quot;hyperparameters&quot;? | What&#39;s the best way to avoid failures when using AI in an organization? | Further Research . Each chapter also has a &quot;Further Research&quot; section that poses questions that aren&#39;t fully answered in the text, or gives more advanced assignments. Answers to these questions aren&#39;t on the book&#39;s website; you&#39;ll need to do your own research! . Why is a GPU useful for deep learning? How is a CPU different, and why is it less effective for deep learning? | Try to think of three areas where feedback loops might impact the use of machine learning. See if you can find documented examples of that happening in practice. |",
            "url": "https://andrewn2000.github.io/dl-blog/2020/09/07/intro.html",
            "relUrl": "/2020/09/07/intro.html",
            "date": " • Sep 7, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Excited And Anxious",
            "content": "# Excited and Anxious . . Have you ever been getting ready for some big event both dreading all the preparation but looking forward to all the activities? Well that’s how I’ve been with this new study group that begins tomorrow! . I didn’t want to push myself and watch Lesson 4, and then start to lose all the ideas I want to share back in Lesson 1-3. So I decided to take a break and work on something non-fastai -ish. That led me to rebuild my home network and add an access point, because these days I seem to need that network access even in the bathroom. . Of course, its never a simple setup trying to remember all the passwords and the update them all and put them in a nice file so you don’t forget. . After messing with that for most of the afternoon, I went to work on the fastpages. Trying to understand that is a bit of a challenge because I’m not a github actions person. But I thought it intriguing that I’d at least try and see what I can do. . After trying unsuccessfully to get the first one to work, I blew it away and started from scratch and its definitely a bit harder than just getting the original one just for posts. It uses actions which I’m not used to and it does some automated stuff to turn the .ipynb files into an html post. . At present, I was simply doing this blog using the lazy simple method of going to the _posts folder and creating a new file. But I wanted to expand and it seems they have everything ready to go. After I kept trying to post something to the site it dawned on me to look for the error logs in the CI build area. And then I found it, it couldn’t find an image directory. . I copied the original file from fastai just as a test and didn’t realize I needed those images. So I went to the clean directory and posted one there and renamed the title. Voila it worked. . Now, how do I get my posts over from this one over there or vice-versa? Oh well, and least its somewhat setup and I can say that I have fastpages installed and ready to go. . Mark that off my bucket list of things to do! . See you tomorrow with my class study report! . Andy .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/09/07/Excited-and-Anxious.html",
            "relUrl": "/2020/09/07/Excited-and-Anxious.html",
            "date": " • Sep 7, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Cancelled Hiking Trip",
            "content": "Hiking Failure . I had it all planned. I had been building up my endurance and wanted to give my new diet the challenge of hiking San Bernadino Peak for a total of 16.9 miles! . Permit - check | Water - check | Emergency gear - check | Backpack - check | . Then the heat..and now its predicted to be 115 degrees in that area. Phoobar, but maybe God didn’t want me hiking and burn up just a few days before my debut on TWiML, continue reading below! . I decided to keep going through the video lessons and get to the part where I’m supposed to blog my experience. I get through most of the notebook without issues and even sign up with paperspace with the discount code added. NOTE If you don’t sign up, they wont give you even the FREE machines to use like the FREE-P5000. (Once I signed up, they magically became available…) . I didn’t sign up for Google Colab because I figured I’d be slow at needed the GPUs anyway. I also read on Daniel Radecic’s Colab Pro: Is it Worth the Money? on Medium Most of my time will be watching the lectures and reading the book, while running the code now-and-then. I’m not at the point where I’m banging on the GPU just yet with all my DL, but I hope to change that soon. . Then Jose contacted me and said I had 16 people in my slack thread. Wait?!?! What? That thing only went out today, so I better post up some content and make everyone welcomed and excited to join the study group! In case someone wants to check it out:TWIML Fast AI Practical Deel Learning for Coders . My take away is that instead of passively learning it, I might as well jump in with both feet, make some new friends around the world. Now I should really learn how to publish my own notebooks as blog posts with fastbook eh? .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/09/04/Cancelled-Hiking-Trip.html",
            "relUrl": "/2020/09/04/Cancelled-Hiking-Trip.html",
            "date": " • Sep 4, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "More Ethics",
            "content": "Why did I ever start the Ethics course?!?! . As I stated previously, I never really thought (or cared) about ethics. I was only interested in taking my technological skills to the next level. This ethics thing got me interested. I’m not really a fan of academia, but in the course there are many articles written in just that. I watched Lesson 2 of the ethics course and there was a lot of overlap in the book, chapter 3. But the links and other reading materials lead one to rethink their roles in technology. . But I digress… . My study group got bumped from its original date and I start on Tuesday, Sept 8 a day after the Labor Day Holiday. I hope I have more than just 2 or 3, making it fun and interesting. . Of course, all of this has me studying and preparing for those lessons as I don’t want me to the drag in the study group that I’m HOSTING! . I watched a little bit of the AICamp and was disappointed in Automated ML. Maybe I’m just getting too advanced in DL these days. . Now I’m reading Datasheets for Datasets and thought it was an interesting concept, but not sure how that’s going to go well with everyone doing there own thing these days. . Until tomorrow. . Andy .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/09/03/More-Ethics.html",
            "relUrl": "/2020/09/03/More-Ethics.html",
            "date": " • Sep 3, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "Ethics",
            "content": "Ethics? You have to be kidding me? . I must admit that when I first heard about Ethics I was thinking it wasn’t for “me”. But then I started with Rachel’s course and I was hooked on the first session of disinformation. Then I get to chapter 3 of the book and find myself immersed in a topic that I never gave a second thought. It dawned on me that everyone, and I mean EVERYONE has been discriminated from the family, social, work force. . And then it dawned on me, I’m already biased. AND I get biased information, let alone the other things that Rachel was describing. Have you ever signed up to Medium and got their Medium Daily Digest? . Do you wonder that they serve content based on your recent readings? Is this good? Maybe? But then its only encouraging one side of the story. On Monday, 9/1/2020 I got a curated email: . Coronavirus May Be a Blood Vessel Disease, Which Explains Everything . But after attending session 1 from the Data Ethics course, I just type in title-fact check and quickly find out: . Coronaviruses are a large family of viruses that are known to cause illness ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS) and Severe Acute Respiratory Syndrome (SARS). . So no, not a blood vessel disease, but it was interesting that I would get this from Medium. But then again, maybe Medium is trapped by their own recommendation algorithms without fact checking. But who would fact check Medium? Not me. But should we? . Today’s Medium curation gave me: . A Supercomputer Analyzed Covid-19 — and an Interesting New Theory Has Emerged A closer look at the Bradykinin hypothesis . What I find when I google search the second line is a whole slew of articles, but most link back to this article as TRUTH. . So what to do? Put these articles to rest? Continue to cite them as truth? Ah I know, subscribe to Medium for $5/month just like they want me to and then begin to write my own “stories” so they can sell more subscriptions. . Ah, but maybe I know the backdoor??!?! I’m wondering if I can take my skills that I’m learning and get compensated for writing that will pay for the membership by gaming their own system. . Oh the things I would do if it wasn’t for….ethics. (sigh) . Until we read again! . Andy .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/09/02/Ethics.html",
            "relUrl": "/2020/09/02/Ethics.html",
            "date": " • Sep 2, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "fastcore: An Underrated Python Library",
            "content": ". Background . I recently embarked on a journey to sharpen my python skills: I wanted to learn advanced patterns, idioms, and techniques. I started with reading books on advanced Python, however, the information didn&#39;t seem to stick without having somewhere to apply it. I also wanted the ability to ask questions from an expert while I was learning -- which is an arrangement that is hard to find! That&#39;s when it occurred to me: What if I could find an open source project that has fairly advanced python code and write documentation and tests? I made a bet that if I did this it would force me to learn everything very deeply, and the maintainers would be appreciative of my work and be willing to answer my questions. . And that&#39;s exactly what I did over the past month! I&#39;m pleased to report that it has been the most efficient learning experience I&#39;ve ever experienced. I&#39;ve discovered that writing documentation forced me to deeply understand not just what the code does but also why the code works the way it does, and to explore edge cases while writing tests. Most importantly, I was able to ask questions when I was stuck, and maintainers were willing to devote extra time knowing that their mentorship was in service of making their code more accessible! It turns out the library I choose, fastcore is some of the most fascinating Python I have ever encountered as its purpose and goals are fairly unique. . For the uninitiated, fastcore is a library on top of which many fast.ai projects are built on. Most importantly, fastcore extends the python programming language and strives to eliminate boilerplate and add useful functionality for common tasks. In this blog post, I&#39;m going to highlight some of my favorite tools that fastcore provides, rather than sharing what I learned about python. My goal is to pique your interest in this library, and hopefully motivate you to check out the documentation after you are done to learn more! . Why fastcore is interesting . Get exposed to ideas from other languages without leaving python: I’ve always heard that it is beneficial to learn other languages in order to become a better programmer. From a pragmatic point of view, I’ve found it difficult to learn other languages because I could never use them at work. Fastcore extends python to include patterns found in languages as diverse as Julia, Ruby and Haskell. Now that I understand these tools I am motivated to learn other languages. | You get a new set of pragmatic tools: fastcore includes utilities that will allow you to write more concise expressive code, and perhaps solve new problems. | Learn more about the Python programming language: Because fastcore extends the python programming language, many advanced concepts are exposed during the process. For the motivated, this is a great way to see how many of the internals of python work. | A whirlwind tour through fastcore . Here are some things you can do with fastcore that immediately caught my attention. . . Making **kwargs transparent . Whenever I see a function that has the argument **kwargs, I cringe a little. This is because it means the API is obfuscated and I have to read the source code to figure out what valid parameters might be. Consider the below example: . def baz(a, b=2, c =3, d=4): return a + b + c def foo(c, a, **kwargs): return c + baz(a, **kwargs) inspect.signature(foo) . &lt;Signature (c, a, **kwargs)&gt; . Without reading the source code, it might be hard for me to know that foo also accepts and additional parameters b and d. We can fix this with delegates: . def baz(a, b=2, c =3, d=4): return a + b + c @delegates(baz) # this decorator will pass down keyword arguments from baz def foo(c, a, **kwargs): return c + baz(a, **kwargs) inspect.signature(foo) . &lt;Signature (c, a, b=2, d=4)&gt; . You can customize the behavior of this decorator. For example, you can have your cake and eat it too by passing down your arguments and also keeping **kwargs: . @delegates(baz, keep=True) def foo(c, a, **kwargs): return c + baz(a, **kwargs) inspect.signature(foo) . &lt;Signature (c, a, b=2, d=4, **kwargs)&gt; . You can also exclude arguments. For example, we exclude argument d from delegation: . def basefoo(a, b=2, c =3, d=4): pass @delegates(basefoo, but= [&#39;d&#39;]) # exclude `d` def foo(c, a, **kwargs): pass inspect.signature(foo) . &lt;Signature (c, a, b=2)&gt; . You can also delegate between classes: . class BaseFoo: def __init__(self, e, c=2): pass @delegates()# since no argument was passsed here we delegate to the superclass class Foo(BaseFoo): def __init__(self, a, b=1, **kwargs): super().__init__(**kwargs) inspect.signature(Foo) . &lt;Signature (a, b=1, c=2)&gt; . For more information, read the docs on delegates. . . Avoid boilerplate when setting instance attributes . Have you ever wondered if it was possible to avoid the boilerplate involved with setting attributes in __init__? . class Test: def __init__(self, a, b ,c): self.a, self.b, self.c = a, b, c . Ouch! That was painful. Look at all the repeated variable names. Do I really have to repeat myself like this when defining a class? Not Anymore! Checkout store_attr: . class Test: def __init__(self, a, b, c): store_attr() t = Test(5,4,3) assert t.b == 4 . You can also exclude certain attributes: . class Test: def __init__(self, a, b, c): store_attr(but=[&#39;c&#39;]) t = Test(5,4,3) assert t.b == 4 assert not hasattr(t, &#39;c&#39;) . There are many more ways of customizing and using store_attr than I highlighted here. Check out the docs for more detail. . . Avoiding subclassing boilerplate . One thing I hate about python is the __super__().__init__() boilerplate associated with subclassing. For example: . class ParentClass: def __init__(self): self.some_attr = &#39;hello&#39; class ChildClass(ParentClass): def __init__(self): super().__init__() cc = ChildClass() assert cc.some_attr == &#39;hello&#39; # only accessible b/c you used super . We can avoid this boilerplate by using the metaclass PrePostInitMeta. We define a new class called NewParent that is a wrapper around the ParentClass: . class NewParent(ParentClass, metaclass=PrePostInitMeta): def __pre_init__(self, *args, **kwargs): super().__init__() class ChildClass(NewParent): def __init__(self):pass sc = ChildClass() assert sc.some_attr == &#39;hello&#39; . . Type Dispatch . Type dispatch, or Multiple dispatch, allows you to change the way a function behaves based upon the input types it receives. This is a prominent feature in some programming languages like Julia. For example, this is a conceptual example of how multiple dispatch works in Julia, returning different values depending on the input types of x and y: . collide_with(x::Asteroid, y::Asteroid) = ... # deal with asteroid hitting asteroid collide_with(x::Asteroid, y::Spaceship) = ... # deal with asteroid hitting spaceship collide_with(x::Spaceship, y::Asteroid) = ... # deal with spaceship hitting asteroid collide_with(x::Spaceship, y::Spaceship) = ... # deal with spaceship hitting spaceship . Type dispatch can be especially useful in data science, where you might allow different input types (i.e. Numpy arrays and Pandas dataframes) to a function that processes data. Type dispatch allows you to have a common API for functions that do similar tasks. . Unfortunately, Python does not support this out-of-the box. Fortunately, there is the @typedispatch decorator to the rescue. This decorator relies upon type hints in order to route inputs the correct version of the function: . @typedispatch def f(x:str, y:str): return f&#39;{x}{y}&#39; @typedispatch def f(x:np.ndarray): return x.sum() @typedispatch def f(x:int, y:int): return x+y . Below is a demonstration of type dispatch at work for the function f: . f(&#39;Hello &#39;, &#39;World!&#39;) . &#39;Hello World!&#39; . f(2,3) . 5 . f(np.array([5,5,5,5])) . 20 . There are limitations of this feature, as well as other ways of using this functionality that you can read about here. In the process of learning about typed dispatch, I also found a python library called multipledispatch made by Mathhew Rocklin (the creator of Dask). . After using this feature, I am now motivated to learn languages like Julia to discover what other paradigms I might be missing. . . A better version of functools.partial . functools.partial is a great utility that creates functions from other functions that lets you set default values. Lets take this function for example that filters a list to only contain values &gt;= val: . test_input = [1,2,3,4,5,6] def f(arr, val): &quot;Filter a list to remove any values that are less than val.&quot; return [x for x in arr if x &gt;= val] f(test_input, 3) . [3, 4, 5, 6] . You can create a new function out of this function using partial that sets the default value to 5: . filter5 = partial(f, val=5) filter5(test_input) . [5, 6] . One problem with partial is that it removes the original docstring and replaces it with a generic docstring: . filter5.__doc__ . &#39;partial(func, *args, **keywords) - new function with partial application n of the given arguments and keywords. n&#39; . fastcore.utils.partialler fixes this, and makes sure the docstring is retained such that the new API is transparent: . filter5 = partialler(f, val=5) filter5.__doc__ . &#39;Filter a list to remove any values that are less than val.&#39; . . Composition of functions . A technique that is pervasive in functional programming languages is function composition, whereby you chain a bunch of functions together to achieve some kind of result. This is especially useful when applying various data transformations. Consider a toy example where I have three functions: (1) Removes elements of a list less than 5 (from the prior section) (2) adds 2 to each number (3) sums all the numbers: . def add(arr, val): return [x + val for x in arr] def arrsum(arr): return sum(arr) # See the previous section on partialler add2 = partialler(add, val=2) transform = compose(filter5, add2, arrsum) transform([1,2,3,4,5,6]) . 15 . But why is this useful? You might me thinking, I can accomplish the same thing with: . arrsum(add2(filter5([1,2,3,4,5,6]))) . You are not wrong! However, composition gives you a convenient interface in case you want to do something like the following: . def fit(x, transforms:list): &quot;fit a model after performing transformations&quot; x = compose(*transforms)(x) y = [np.mean(x)] * len(x) # its a dumb model. Don&#39;t judge me return y # filters out elements &lt; 5, adds 2, then predicts the mean fit(x=[1,2,3,4,5,6], transforms=[filter5, add2]) . [7.5, 7.5] . For more information about compose, read the docs. . . A more useful __repr__ . In python, __repr__ helps you get information about an object for logging and debugging. Below is what you get by default when you define a new class. (Note: we are using store_attr, which was discussed earlier). . class Test: def __init__(self, a, b=2, c=3): store_attr() # `store_attr` was discussed previously Test(1) . &lt;__main__.Test at 0x7fe0ab662790&gt; . We can use basic_repr to quickly give us a more sensible default: . class Test: def __init__(self, a, b=2, c=3): store_attr() __repr__ = basic_repr(&#39;a,b,c&#39;) Test(2) . Test(a=2, b=2, c=3) . . Monkey Patching With A Decorator . It can be convenient to monkey patch with a decorator, which is especially helpful when you want to patch an external library you are importing. We can use the decorator @patch from fastcore.foundation along with type hints like so: . class MyClass(int): pass @patch def func(self:MyClass, a): return self+a mc = MyClass(3) . Now, MyClass has an additional method named func: . mc.func(10) . 13 . Still not convinced? I&#39;ll show you another example of this kind of patching in the next section. . . A better pathlib.Path . When you see these extensions to pathlib.path you won&#39;t ever use vanilla pathlib again! A number of additional methods have been added to pathlib, such as: . Path.readlines: same as with open(&#39;somefile&#39;, &#39;r&#39;) as f: f.readlines() | Path.read: same as with open(&#39;somefile&#39;, &#39;r&#39;) as f: f.read() | Path.save: saves file as pickle | Path.load: loads pickle file | Path.ls: shows the contents of the path as a list. | etc. | . Read more about this here. Here is a demonstration of ls: . from pathlib import Path p = Path(&#39;../_notebooks&#39;) p.ls() # you don&#39;t get this with vanilla Pathlib.Path!! . (#21) [Path(&#39;../_notebooks/gpt2_simple_mask.jpg&#39;),Path(&#39;../_notebooks/bert_mac_small.jpg&#39;),Path(&#39;../_notebooks/causal_with_prefix.jpg&#39;),Path(&#39;../_notebooks/.DS_Store&#39;),Path(&#39;../_notebooks/2020-03-07-How_to_Create_an_Automatic_Code_Comment_Generator_using_Deep_Learning.ipynb&#39;),Path(&#39;../_notebooks/2020-09-01-fastcore.ipynb&#39;),Path(&#39;../_notebooks/2020-03-07-Syntax-Highlighting.ipynb&#39;),Path(&#39;../_notebooks/2020-03-06-bart.ipynb&#39;),Path(&#39;../_notebooks/README.md&#39;),Path(&#39;../_notebooks/2020-05-01-TrainDonkeyCar.ipynb&#39;)...] . Wait! What&#39;s going on here? We just imported pathlib.Path - why are we getting this new functionality? Thats because we imported the fastcore.foundation module, which patches this module via the @patch decorator discussed earlier. Just to drive the point home on why the @patch decorator is useful, I&#39;ll go ahead and add another method to Path right now: . @patch def fun(self:Path): return &quot;This is fun!&quot; p.fun() . &#39;This is fun!&#39; . That is magical, right? I know! That&#39;s why I&#39;m writing about it! . . An Even More Concise Way To Create Lambdas . Self, with an uppercase S, is an even more concise way to create lambdas that are calling methods on an object. For example, let&#39;s create a lambda for taking the sum of a Numpy array: . arr=np.array([5,4,3,2,1]) f = lambda a: a.sum() assert f(arr) == 15 . You can use Self in the same way: . f = Self.sum() assert f(arr) == 15 . Let&#39;s create a lambda that does a groupby and max of a Pandas dataframe: . import pandas as pd df=pd.DataFrame({&#39;Some Column&#39;: [&#39;a&#39;, &#39;a&#39;, &#39;b&#39;, &#39;b&#39;, ], &#39;Another Column&#39;: [5, 7, 50, 70]}) f = Self.groupby(&#39;Some Column&#39;).mean() f(df) . Another Column . Some Column . a 6 | . b 60 | . Read more about Self in the docs). . . Notebook Functions . These are simple but handy, and allow you to know whether or not code is executing in a Jupyter Notebook, Colab, or an Ipython Shell: . in_notebook(), in_colab(), in_ipython() . (True, False, True) . This is useful if you are displaying certain types of visualizations, progress bars or animations in your code that you may want to modify or toggle depending on the environment. . . A Drop-In Replacement For List . You might be pretty happy with Python&#39;s list. This is one of those situations that you don&#39;t know you needed a better list until someone showed one to you. Enter L, a list like object with many extra goodies. . The best way I can describe L is to pretend that list and numpy had a pretty baby: . define a list (check out the nice __repr__ that shows the length of the list!) . L(1,2,3) . (#3) [1,2,3] . Shuffle a list: . p = L.range(20).shuffle() p . (#20) [2,0,18,6,15,17,14,8,12,1...] . Index into a list: . p[2,4,6] . (#3) [18,15,14] . L has sensible defaults, for example appending an element to a list: . 1 + L(2,3,4) . (#4) [1,2,3,4] . There is much more L has to offer. Read the docs to learn more. . But Wait ... There&#39;s More! . There are more things I would like to show you about fastcore, but there is no way they would reasonably fit into a blog post. Here is a list of some of my favorite things that I didn&#39;t demo in this blog post: . Utilities . The Utilites section contain many shortcuts to perform common tasks or provide an additional interface to what standard python provides. . mk_class: quickly add a bunch of attributes to a class | wrap_class: add new methods to a class with a simple decorator | groupby: similar to Scala&#39;s groupby | merge: merge dicts | fasttuple: a tuple on steroids | Infinite Lists: useful for padding and testing | chunked: for batching and organizing stuff | . Multiprocessing . The Multiprocessing section extends python&#39;s multiprocessing library by offering features like: . progress bars | ability to pause to mitigate race conditions with external services | processing things in batches on each worker, ex: if you have a vectorized operation to perform in chunks | . Functional Programming . The functional programming section is my favorite part of this library. . maps: a map that also composes functions | mapped: A more robust map | using_attr: compose a function that operates on an attribute | . Transforms . Transforms is a collection of utilities for creating data transformations and associated pipelines. These transformation utilities build upon many of the building blocks discussed in this blog post. . Further Reading . It should be noted that you should read the main page of the docs first, followed by the section on tests to fully understand the documentation. . The fastcore documentation site. | The fastcore GitHub repo. | Blog post on delegation. | . Shameless plug: fastpages . This blog post was written entirely in a Jupyter Notebook, which GitHub automatically converted into to a blog post! Sound interesting? Check out fastpages. .",
            "url": "https://andrewn2000.github.io/dl-blog/fastcore/",
            "relUrl": "/fastcore/",
            "date": " • Sep 1, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "Chapter1 Thoughts",
            "content": "Chapter 1 - thoughts and reflections . I finally managed to get through chapter 1 and the labs. It was a challenge using Gradient as one of the labs continued to get an error. . from fastai.text.all import * dls = TextDataLoaders.from_folder(untar_data(URLs.IMDB), valid=&#39;test&#39;) learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy) learn.fine_tune(4, 1e-2) . I manged to find the solution on the forums, which was to remove the offending directory in a terminal like this: rm -rf imdb_tok . I also found out that these videos (Lessons 1-8) were part of class given back in March and some of the notes are found on the forums. . I’m going to go with Paperspace, but I wanted to resolve that error I continued to have above. It looks like it was the unofficial recommendation based on this forum post by Jeremy back in March 2020 . I did look at Google Colab, and although its easy to link through the guides, something tells me that its better with Gradient being that its a full jupyter environment. And it tends to be a lot slower than paperspace as I kept running the TextDataLoaders and comparing to the run from Gradient. (now that I have it working) Note: All the labs in 01_intro.ipynb worked in Gradient, and WAS working in Google colab. Then Google colab starting having issues and that sealed it for me. . There is a credit as mentioned here: . Promotional credit Paperspace provides $15 of free Gradient credit for using paid instances. This code is to be used for Fast.ai students only. In your console, click on Billing and enter the promo code at the bottom right. The promo code for this course is: FASTAIGR20. Note: the code is valid until Dec 31st, 2020 . In the beginning of Lesson 2, around 38:25 there was a comment made by Jeremy saying that the lessons (1-8) are not meant to cover the entire course. In the previous courses, there were 14 lessons, and he stated that to get through the book might be 3 courses. . I would imagine that these courses would be forthcoming, but if you wanted to forge ahead, the book is a good reference guide. . I believe I found my strategy. . Watch the video following along in the printed book version, making notes and annotations best I can | Read the chapter | Answer the Questions | Do the Lab | Write up for the day | Practical Data Ethics course (something else to wind down the day) | (or maybe switch between 3/4) . I did quite a bit of work today, and wanted to continue, but if I keep going at this rate, I would finish all the videos before my study group begins! That’s a goal I should have had last MONTH! .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/08/31/Chapter1-thoughts.html",
            "relUrl": "/2020/08/31/Chapter1-thoughts.html",
            "date": " • Aug 31, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "Networking",
            "content": "Out of my shell onto the virtual stage! . Before I dive into my journey, I thought I’d get a lay of the land first and reach out and make new contacts and friends. My first thought is just plowing through the material like before, but I run into some difficulties with this. . Challenges: . No accountability for anything, schedule, learning path/objectives, finding creative projects that resonate with me, etc | Not sure if I’m headed in the right direction or veering off course into a tangent that wont serve me | Limiting my opportunities of not getting a bigger picture | After digging through the forums, I found an interesting site at TWIML Community . So I figued just getting involved here might be a better fit than the FastAI Forums. . Also, it might be good to have a checklist on things I need/want to accomplish (such as creating a Paperspace account, figuring out to publish jupyter notebooks to github, etc. . Anyhow, I also would like to be more diligent wriiting here and documenting my journey for those coming after me. Let’s see how far I get today. . Update I was able to meet with Jose Ochoa (and oshan) from TWIML. We discussed next steps but it may be that I start my course right as I was thinking on Sept 9. Very excited. Also made paperspace account and it had a github settings so not sure if they will go in there or not. In paperspace, I had to wait until a free server was available as I was going to put a cc but thought I’d better wait. Good thing I did just to try it out. .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/08/28/Networking.html",
            "relUrl": "/2020/08/28/Networking.html",
            "date": " • Aug 28, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "Books and notes",
            "content": "Books and notes, and more notes! . Here we go AGAIN! Skipping to FastAI v2, is somewhat different. First, I’ve been through several of the v1 videos and got the terminology in my head. So it was a refresher and breather that I’m able to get through video 1 of the new course without too many ???? . That said, just resetting my brain and getting in the flow of study might be a bit challenging. I remembered how the blog was supposed to work, and now putting in my daily notes. I forgot how the jupyter notes worked and fired up my anaconda. . I was studying Python for a bit and saw a lot of my old notebooks, but wanted to know how to push them up to github using fastai’s template. . But maybe that’s all the old way as I see now they have Colab, Gradient and DataCrunch. All look very cool, but I’m used to Google Colab and will start from there. . I complained to Oreily on this, but the actual book is located here: . https://github.com/fastai/fastbook and the clean version is supposedly the stripped down version . However, note the instructions like on Colab about getting the actual jupyter notebooks and you’ll notice that you could just use those. See you tomorrow! . Andy .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/08/24/Books-and-Notes.html",
            "relUrl": "/2020/08/24/Books-and-Notes.html",
            "date": " • Aug 24, 2020"
        }
        
    
  
    
        ,"post10": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://andrewn2000.github.io/dl-blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post11": {
            "title": "Setting up gitblog",
            "content": "Setting up Gitblog - Part 2 Problems and Security . . Comments on:https://www.fast.ai/2020/01/18/gitblog/ . Well its not so simple as just follow the instructions. Suppose you ALREADY have a domain name and its HOSTING mail for you. The problem is that if you yank the DNS, you’ll lose your mail and whatever other service you might like (ftp, webdav, etc) not just your web pages. . I’m hosted on Hostgator, but mine is a bit more complicated as I don’t have it hosting my registered names. For that I use a separate provider just in case one day I dislike Hostgator and move somewhere else. . If you’re just getting started, you might (and more likely will) find a registrar that has a special for $0.99 for one year. This means you can test it out for a year and see if you like their service and hopefully continue on as a customer. When I’m testing out ideas for websites, I use these special deals and point it to Hostgator. To me it makes more sense to use this and then when I near my anniversary date change it to my regular registrar should I want to keep the name or let it expire. . As the article suggested I change my nameservers to point to Github servers. Luckily my nameservers were rejected, which made me think a bit longer…as a failsafe. It’s always good to slow down when you encounter an error. Take a break or a walk. . I then went to Hostgator and looks at what I had there, and it looks like I’m supposed to remove the A record and then add the IPs from Github. . . After that, everything “seemed” to work except the annoying “Not Secure”. Hmmm… . . After googling a little bit, I found where you are supposed to be able to check the little box for “Enforce HTTPS” in the settings, but it was greyed out. Now mind you I had free SSL certs ALREADY installed so my site andynakamura.com had a certificate installed. Apparently, it didn’t like it when I changed the A record and wanted a new SSL. Ah, lesson learned. No problem, as I head over to zerossl.com and walk thru getting a new certificate installed on my webserver. By now, I’m a pro at this as the certs only give you 60 days. . Once I got my cert installed, I just had to wait a few hours and went to sleep. Like a little kid at Christmas, I woke up, went to the GitHub settings and selected the Enforce HTTPS and voila all was working! . . Now I can start getting this crazy blog going! Onward! .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/01/30/Setting-up-Gitblog.html",
            "relUrl": "/2020/01/30/Setting-up-Gitblog.html",
            "date": " • Jan 30, 2020"
        }
        
    
  
    
        ,"post12": {
            "title": "Helloworld",
            "content": "Setting up gitblog . *first mistake . Not typing in the username exactly! . I know, its such a simple task, but how to resolve it? Do I just continue? But it doesn’t work and I hit my first stumbling block. I tried a few tasks within github to no avail. I even renamed it to the proper name, but still no go. . . So I deleted the repo and started again, this time being extra careful…and then voila it worked in 30 seconds. . The next step download GitHub desktop and synch locally to my desktop. This will be important as I should be very familiar with git and its commands but I never thought of keeping it as a blog. Interesting. So away I went, downloaded and installed. . So this is probably your first assignment. Set up the gitblog and post your first post. If you happen to own your own domain, I’d suggest point it to your new blog following the instructions, but I digress as its more important to just start writing and cataloging your progress! .",
            "url": "https://andrewn2000.github.io/dl-blog/2020/01/29/HelloWorld.html",
            "relUrl": "/2020/01/29/HelloWorld.html",
            "date": " • Jan 29, 2020"
        }
        
    
  
    
        ,"post13": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://andrewn2000.github.io/dl-blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://andrewn2000.github.io/dl-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://andrewn2000.github.io/dl-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}